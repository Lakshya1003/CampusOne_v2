import React, { useEffect } from 'react'
import { Toaster } from '@/components/ui/toaster'
import { Toaster as Sonner } from '@/components/ui/sonner'
import { TooltipProvider } from '@/components/ui/tooltip'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { trackPageView } from '@/lib/analytics'
import { supabase } from '@/lib/supabase'
import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'

// Pages and Layouts
import NotFound from './pages/NotFound'
import LoginPage from './components/LoginPage'
import SignUpPage from './components/SignUpPage'
import { DashboardLayout } from './components/DashboardLayout'
import { AppSidebar } from './components/AppSidebar'

// Admin Components
import { AdminDashboard } from './components/admin/Dashboard'
import AdmissionApprovals from './components/admin/AdmissionApprovals'
import FeeManagement from './components/admin/FeeManagement'
import HostelAllocation from './components/admin/HostelAllocation'
import ExamResultsUpload from './components/ExamResultsUpload'
import AttendanceMarkingInterface from './components/AttendanceMarkingInterface'

// Student Components
import StudentDashboard from './pages/StudentDashboard'
import AdmissionForm from './components/AdmissionForm'
import HostelAllocationPanel from './components/HostelAllocationPanel'

const queryClient = new QueryClient()

const App: React.FC = () => {
  useEffect(() => {
    // Track initial page view
    trackPageView(window.location.pathname)

    // Set up auth listener
    const {
      data: { subscription },
    } = supabase.auth.onAuthStateChange((event, session) => {
      if (event === 'SIGNED_IN') {
        console.log('User signed in:', session?.user)
      } else if (event === 'SIGNED_OUT') {
        window.location.href = '/login'
      }
    })

    return () => {
      subscription.unsubscribe()
    }
  }, [])

  return (
    <QueryClientProvider client={queryClient}>
      <TooltipProvider>
        <Toaster />
        <Sonner />
        <BrowserRouter>
          <Routes>
            {/* Public Routes */}
            <Route path="/login" element={<LoginPage />} />
            <Route path="/signup" element={<SignUpPage />} />

            {/* Admin Routes */}
            <Route
              path="/admin/*"
              element={
                <DashboardLayout
                  sidebarContent={<AppSidebar userRole="admin" />}
                >
                  <Routes>
                    <Route index element={<AdminDashboard />} />
                    <Route path="admissions" element={<AdmissionApprovals />} />
                    <Route path="fees" element={<FeeManagement />} />
                    <Route path="hostel" element={<HostelAllocation />} />
                    <Route path="exams" element={<ExamResultsUpload />} />
                    <Route path="attendance" element={<AttendanceMarkingInterface />} />
                    <Route path="analytics" element={<div>Analytics Dashboard</div>} />
                    <Route path="notifications" element={<div>Notifications</div>} />
                    <Route path="settings" element={<div>Settings & Roles</div>} />
                  </Routes>
                </DashboardLayout>
              }
            />

            {/* Student Routes */}
            <Route
              path="/student/*"
              element={
                <DashboardLayout
                  sidebarContent={<AppSidebar userRole="student" />}
                >
                  <Routes>
                    <Route index element={<StudentDashboard />} />
                    <Route path="admission" element={<AdmissionForm />} />
                    <Route path="hostel" element={<HostelAllocationPanel />} />
                    <Route path="results" element={<ExamResultsUpload />} />
                    <Route path="attendance" element={<AttendanceMarkingInterface />} />
                    <Route path="notifications" element={<div>Notifications</div>} />
                    <Route path="settings" element={<div>Settings</div>} />
                  </Routes>
                </DashboardLayout>
              }
            />

            {/* Root and fallback routes */}
            <Route path="/" element={<Navigate to="/login" replace />} />
            <Route path="*" element={<NotFound />} />
          </Routes>
        </BrowserRouter>
      </TooltipProvider>
    </QueryClientProvider>
  )
}

export default App